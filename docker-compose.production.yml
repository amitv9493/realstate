volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}
  production_redis_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: realstate_new_production_django
    volumes:
      - production_django_media:/app/realstate_new/media
      - /var/log/realstate_new/django:/app/logs
    user: django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: realstate_new_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
      - /var/log/realstate_new/postgres:/var/log/postgresql
    env_file:
      - ./.envs/.production/.postgres
    ports:
      - '5432:5432'
    command: ["postgres", "-c", "listen_addresses=*"]

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: realstate_new_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
      - /var/log/realstate_new/treafik:/var/log/traefik
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:5555:5555'

  redis:
    image: docker.io/redis:6
    volumes:
      - production_redis_data:/data
      - /var/log/realstate_new/redis:/var/log/redis

  celeryworker:
    <<: *django
    image: realstate_new_production_celeryworker
    volumes:
      - production_django_media:/app/realstate_new/media
      - /var/log/realstate_new/celery/worker:/app/logs
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: realstate_new_production_celerybeat
    volumes:
      - production_django_media:/app/realstate_new/media
      - /var/log/realstate_new/celery/beat:/app/logs
    command: /start-celerybeat

  flower:
    <<: *django
    image: realstate_new_production_flower
    volumes:
      - production_django_media:/app/realstate_new/media
      - /var/log/realstate_new/flower:/app/logs
    command: /start-flower

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: realstate_new_production_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
      - /var/log/realstate_new/celery/nginx:/var/log/nginx

  pgbouncer:
      container_name: pgbouncer
      image: bitnami/pgbouncer:latest
      env_file:
        - ./.envs/.production/.pgbouncer
      ports:
        - "5433:5432"
      depends_on:
        - postgres
      healthcheck:
        test: ['CMD', 'pg_isready', '-h', 'localhost']
